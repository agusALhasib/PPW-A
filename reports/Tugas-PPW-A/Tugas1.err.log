Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Fungsi untuk mengambil data dari halaman web Detik.com
def get_data(url, kategori, min_articles_per_category):
    try:
        response = requests.get(url)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"Request failed: {e}")
        return

    soup = BeautifulSoup(response.content, "html.parser")
    articles = soup.find_all("article", class_="list-content__item")

    for article in articles:
        if len([k for k in kategori_list if k == kategori]) >= min_articles_per_category:
            return  # Menghentikan proses jika jumlah artikel sudah mencapai minimum yang diinginkan

        try:
            link = article.find("a")["href"]
            article_response = requests.get(link)
            article_response.raise_for_status()
        except (requests.exceptions.RequestException, TypeError) as e:
            print(f"Request for article failed: {e}")
            continue

        article_soup = BeautifulSoup(article_response.content, "html.parser")
        title_element = article_soup.find("h1", class_="detail__title")
        title = title_element.text.strip() if title_element else "Title Not Found"
        date_element = article_soup.find("div", class_="detail__date")
        date = date_element.text.strip() if date_element else "Date Not Found"
        content_element = article_soup.find("div", class_="detail__body-text")
        content = content_element.text.strip() if content_element else "Content Not Found"

        # Bersihkan konten menggunakan fungsi clean_content
        content = clean_content(content_element)


        judul.append(title)
        tanggal.append(date)
        isi.append(content)
        # url_list.append(link)
        kategori_list.append(kategori)

        if len(judul) <= 10:
          print(title)
        time.sleep(1)  # Menambahkan jeda waktu 1 detik antara permintaan artikel

# Membuat list url dan kategori yang akan di-crawl
base_urls = [
    "https://sport.detik.com/indeks",
    "https://food.detik.com/indeks",
]
categories = [
    "Olahraga",
    "Makanan",
]

# Inisialisasi list untuk menyimpan data
judul = []
tanggal = []
isi = []
kategori_list = []

# Batas minimal artikel per kategori
min_articles_per_category = 50

# Melakukan iterasi untuk setiap url dan kategori
for base_url, category in zip(base_urls, categories):
    page = 1
    while len([k for k in kategori_list if k == category]) < min_articles_per_category:
        url = f"{base_url}/{page}"
        get_data(url, category, min_articles_per_category)
        time.sleep(2)  # Menambahkan jeda waktu 2 detik antara permintaan halaman
        page += 1

# Membuat dataframe dari list data
df = pd.DataFrame({"judul": judul, "tanggal": tanggal, "isi": isi, "kategori": kategori_list})

# Menyimpan dataframe ke file csv
df.to_csv("data_berita_detik.csv", index=False)

# Menampilkan dataframe
# print(df)
------------------

----- stdout -----
Daftar Earlybird OPPO Run 2024 Pakai BRImo Bisa Dapat Diskon-Hadiah
----- stdout -----
China Open 2024: Fajar/Rian Terdepak di Perempatfinal
----- stdout -----
China Open 2024: Jonatan Christe Maju ke Semifinal
----- stdout -----
Hasil FP1 MotoGP Emilia Romagna: Marc Marquez Terdepan
----- stdout -----
Pendaftaran Calon Ketum PP Perbasi: Budisatrio Didukung 28 Pengprov
----- stdout -----
Daniel/Fikri Senang Menang, tapi Tak Puas dengan Permainan
----- stdout -----
China Open 2024: Fikri/Daniel Lanjut ke Semifinal!
----- stdout -----
PON 2024: Muay Thai DKI Jakarta Raih 1 Perak dan 2 Perunggu
----- stdout -----
Dejan/Gloria Tembus Semifinal, Pencapaian Terbaik di Tahun Ini
----- stdout -----
China Open 2024: Dejan/Gloria Melenggang ke Semifinal
----- stderr -----
ERROR:root:Internal Python error in the inspect module.
Below is the traceback from this internal error.
----- stdout -----
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py", line 3553, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-085455660d02>", line 71, in <cell line: 67>
    get_data(url, category, min_articles_per_category)
  File "<ipython-input-2-085455660d02>", line 19, in get_data
    article_response = requests.get(link)
  File "/usr/local/lib/python3.10/dist-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
  File "/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py", line 791, in urlopen
    response = self._make_request(
  File "/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py", line 468, in _make_request
    self._validate_conn(conn)
  File "/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py", line 1097, in _validate_conn
    conn.connect()
  File "/usr/local/lib/python3.10/dist-packages/urllib3/connection.py", line 642, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
  File "/usr/local/lib/python3.10/dist-packages/urllib3/connection.py", line 783, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
  File "/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py", line 471, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py", line 515, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
  File "/usr/lib/python3.10/ssl.py", line 513, in wrap_socket
    return self.sslsocket_class._create(
  File "/usr/lib/python3.10/ssl.py", line 1100, in _create
    self.do_handshake()
  File "/usr/lib/python3.10/ssl.py", line 1371, in do_handshake
    self._sslobj.do_handshake()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py", line 2099, in showtraceback
    stb = value._render_traceback_()
AttributeError: 'KeyboardInterrupt' object has no attribute '_render_traceback_'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 1101, in get_records
    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 248, in wrapped
    return f(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 281, in _fixed_getinnerframes
    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))
  File "/usr/lib/python3.10/inspect.py", line 1662, in getinnerframes
    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)
  File "/usr/lib/python3.10/inspect.py", line 1624, in getframeinfo
    lines, lnum = findsource(frame)
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 182, in findsource
    lines = linecache.getlines(file, globals_dict)
  File "/usr/lib/python3.10/linecache.py", line 46, in getlines
    return updatecache(filename, module_globals)
  File "/usr/lib/python3.10/linecache.py", line 137, in updatecache
    lines = fp.readlines()
  File "/usr/lib/python3.10/codecs.py", line 319, in decode
    def decode(self, input, final=False):
KeyboardInterrupt
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
    [0;31m[... skipping hidden 1 frame][0m

[0;32m<ipython-input-2-085455660d02>[0m in [0;36m<cell line: 67>[0;34m()[0m
[1;32m     70[0m         [0murl[0m [0;34m=[0m [0;34mf"{base_url}/{page}"[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 71[0;31m         [0mget_data[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mcategory[0m[0;34m,[0m [0mmin_articles_per_category[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     72[0m         [0mtime[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;36m2[0m[0;34m)[0m  [0;31m# Menambahkan jeda waktu 2 detik antara permintaan halaman[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-2-085455660d02>[0m in [0;36mget_data[0;34m(url, kategori, min_articles_per_category)[0m
[1;32m     18[0m             [0mlink[0m [0;34m=[0m [0marticle[0m[0;34m.[0m[0mfind[0m[0;34m([0m[0;34m"a"[0m[0;34m)[0m[0;34m[[0m[0;34m"href"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 19[0;31m             [0marticle_response[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mlink[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     20[0m             [0marticle_response[0m[0;34m.[0m[0mraise_for_status[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/api.py[0m in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m"get"[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mparams[0m[0;34m=[0m[0mparams[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     58[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 59[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     60[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    588[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 589[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    590[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    702[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 703[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    704[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    666[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 667[0;31m             resp = conn.urlopen(
[0m[1;32m    668[0m                 [0mmethod[0m[0;34m=[0m[0mrequest[0m[0;34m.[0m[0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    790[0m             [0;31m# Make the request on the HTTPConnection object[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 791[0;31m             response = self._make_request(
[0m[1;32m    792[0m                 [0mconn[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[1;32m    467[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 468[0;31m                 [0mself[0m[0;34m.[0m[0m_validate_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    469[0m             [0;32mexcept[0m [0;34m([0m[0mSocketTimeout[0m[0;34m,[0m [0mBaseSSLError[0m[0;34m)[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py[0m in [0;36m_validate_conn[0;34m(self, conn)[0m
[1;32m   1096[0m         [0;32mif[0m [0mconn[0m[0;34m.[0m[0mis_closed[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1097[0;31m             [0mconn[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1098[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    641[0m [0;34m[0m[0m
[0;32m--> 642[0;31m         sock_and_verified = _ssl_wrap_socket_and_match_hostname(
[0m[1;32m    643[0m             [0msock[0m[0;34m=[0m[0msock[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connection.py[0m in [0;36m_ssl_wrap_socket_and_match_hostname[0;34m(sock, cert_reqs, ssl_version, ssl_minimum_version, ssl_maximum_version, cert_file, key_file, key_password, ca_certs, ca_cert_dir, ca_cert_data, assert_hostname, assert_fingerprint, server_hostname, ssl_context, tls_in_tls)[0m
[1;32m    782[0m [0;34m[0m[0m
[0;32m--> 783[0;31m     ssl_sock = ssl_wrap_socket(
[0m[1;32m    784[0m         [0msock[0m[0;34m=[0m[0msock[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py[0m in [0;36mssl_wrap_socket[0;34m(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir, key_password, ca_cert_data, tls_in_tls)[0m
[1;32m    470[0m [0;34m[0m[0m
[0;32m--> 471[0;31m     [0mssl_sock[0m [0;34m=[0m [0m_ssl_wrap_socket_impl[0m[0;34m([0m[0msock[0m[0;34m,[0m [0mcontext[0m[0;34m,[0m [0mtls_in_tls[0m[0;34m,[0m [0mserver_hostname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    472[0m     [0;32mreturn[0m [0mssl_sock[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/util/ssl_.py[0m in [0;36m_ssl_wrap_socket_impl[0;34m(sock, ssl_context, tls_in_tls, server_hostname)[0m
[1;32m    514[0m [0;34m[0m[0m
[0;32m--> 515[0;31m     [0;32mreturn[0m [0mssl_context[0m[0;34m.[0m[0mwrap_socket[0m[0;34m([0m[0msock[0m[0;34m,[0m [0mserver_hostname[0m[0;34m=[0m[0mserver_hostname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/usr/lib/python3.10/ssl.py[0m in [0;36mwrap_socket[0;34m(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)[0m
[1;32m    512[0m         [0;31m# ctx._wrap_socket()[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 513[0;31m         return self.sslsocket_class._create(
[0m[1;32m    514[0m             [0msock[0m[0;34m=[0m[0msock[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/ssl.py[0m in [0;36m_create[0;34m(cls, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, context, session)[0m
[1;32m   1099[0m                         [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"do_handshake_on_connect should not be specified for non-blocking sockets"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1100[0;31m                     [0mself[0m[0;34m.[0m[0mdo_handshake[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1101[0m             [0;32mexcept[0m [0;34m([0m[0mOSError[0m[0;34m,[0m [0mValueError[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/ssl.py[0m in [0;36mdo_handshake[0;34m(self, block)[0m
[1;32m   1370[0m                 [0mself[0m[0;34m.[0m[0msettimeout[0m[0;34m([0m[0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1371[0;31m             [0mself[0m[0;34m.[0m[0m_sslobj[0m[0;34m.[0m[0mdo_handshake[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1372[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyboardInterrupt[0m: 

During handling of the above exception, another exception occurred:

[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py[0m in [0;36mshowtraceback[0;34m(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)[0m
[1;32m   2098[0m                         [0;31m# in the engines. This should return a list of strings.[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2099[0;31m                         [0mstb[0m [0;34m=[0m [0mvalue[0m[0;34m.[0m[0m_render_traceback_[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2100[0m                     [0;32mexcept[0m [0mException[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mAttributeError[0m: 'KeyboardInterrupt' object has no attribute '_render_traceback_'

During handling of the above exception, another exception occurred:

[0;31mTypeError[0m                                 Traceback (most recent call last)
    [0;31m[... skipping hidden 1 frame][0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py[0m in [0;36mshowtraceback[0;34m(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)[0m
[1;32m   2099[0m                         [0mstb[0m [0;34m=[0m [0mvalue[0m[0;34m.[0m[0m_render_traceback_[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2100[0m                     [0;32mexcept[0m [0mException[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2101[0;31m                         stb = self.InteractiveTB.structured_traceback(etype,
[0m[1;32m   2102[0m                                             value, tb, tb_offset=tb_offset)
[1;32m   2103[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1365[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1366[0m             [0mself[0m[0;34m.[0m[0mtb[0m [0;34m=[0m [0mtb[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1367[0;31m         return FormattedTB.structured_traceback(
[0m[1;32m   1368[0m             self, etype, value, tb, tb_offset, number_of_lines_of_context)
[1;32m   1369[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1265[0m         [0;32mif[0m [0mmode[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mverbose_modes[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1266[0m             [0;31m# Verbose modes need a full traceback[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1267[0;31m             return VerboseTB.structured_traceback(
[0m[1;32m   1268[0m                 [0mself[0m[0;34m,[0m [0metype[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mtb[0m[0;34m,[0m [0mtb_offset[0m[0;34m,[0m [0mnumber_of_lines_of_context[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1269[0m             )

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1122[0m         [0;34m"""Return a nice text document describing the traceback."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1123[0m [0;34m[0m[0m
[0;32m-> 1124[0;31m         formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,
[0m[1;32m   1125[0m                                                                tb_offset)
[1;32m   1126[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mformat_exception_as_a_whole[0;34m(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)[0m
[1;32m   1080[0m [0;34m[0m[0m
[1;32m   1081[0m [0;34m[0m[0m
[0;32m-> 1082[0;31m         [0mlast_unique[0m[0;34m,[0m [0mrecursion_repeat[0m [0;34m=[0m [0mfind_recursion[0m[0;34m([0m[0morig_etype[0m[0;34m,[0m [0mevalue[0m[0;34m,[0m [0mrecords[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1083[0m [0;34m[0m[0m
[1;32m   1084[0m         [0mframes[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mformat_records[0m[0;34m([0m[0mrecords[0m[0;34m,[0m [0mlast_unique[0m[0;34m,[0m [0mrecursion_repeat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mfind_recursion[0;34m(etype, value, records)[0m
[1;32m    380[0m     [0;31m# first frame (from in to out) that looks different.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    381[0m     [0;32mif[0m [0;32mnot[0m [0mis_recursion_error[0m[0;34m([0m[0metype[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mrecords[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 382[0;31m         [0;32mreturn[0m [0mlen[0m[0;34m([0m[0mrecords[0m[0;34m)[0m[0;34m,[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    383[0m [0;34m[0m[0m
[1;32m    384[0m     [0;31m# Select filename, lineno, func_name to track frames with[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: object of type 'NoneType' has no len()

